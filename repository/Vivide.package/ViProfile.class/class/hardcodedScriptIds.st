as yet unclassified
hardcodedScriptIds
	"Returns a list of all script ids that are directly referenced in Smalltalk code. This means that a profile's organization must provide some scripts that match those ids. Otherwise Vivide cannot work properly.
	
	Hardcoding script ids is necessary to invoke some expected/default behavior in the environment. For example, there has to be a way to browse senders or implementors of a symbol. Then, the contents of classes and packages are of importance, too. Otherwise, the programmer cannot find the places where to write some new code.
	
	self hardcodedScriptIds."
	
	| scriptSelectors scriptIds |
	scriptSelectors := OrderedCollection new.
	ViAbstractQueryPart withAllSubclassesDo: [:cls |
		#(asScript openScript) in: [:tokens |
			scriptSelectors addAll: (cls selectors select: [:symbol |
				tokens anySatisfy: [:token |
					symbol includesSubstring: token caseSensitive: false]])]].
	
	"Add constructors for (single-pane) editors."
	scriptSelectors addAll: #(new:for: open:for:).

	scriptIds := IdentitySet new.
	SystemNavigation default allSelectorsAndMethodsDo: [:b :s :method |
		(b isTestClass not and: [method literals includesAnyOf: scriptSelectors]) ifTrue: [
			| ast |
			ast := ViToolSet parseMethod: method getSource asString.
			ViToolSet messagesIn: ast do: [:node |
				(((node isMessage "#default asScript"
					and: [scriptSelectors includes: node selector key]) "#asScript"
					and: [node receiver isLiteralNode]) "#default"
					and: [node receiver literalValue isSymbol]) "Ignore script strings."
						ifTrue: [scriptIds add: node receiver literalValue].
						
				((((node isMessage "ViSinglePaneEditor new: #artifacts for: someObjects"
					and: [scriptSelectors includes: node selector key]) "#new:for:"
					and: [node receiver isVariableNode]) "ViSinglePaneEditor"
					and: [(Smalltalk classNamed: node receiver name) isBehavior])
					and: [node arguments first isLiteralNode]) "no temps"
						ifTrue: [scriptIds add: node arguments first key].
	]]].
			
	^ scriptIds sorted